server:
  port: 8080


# 멘토님께서 주신 예제
#spring:
#  application:
#    name: pet-match
#  jpa:
#    hibernate:
#      ddl-auto: create
#    properties:
#      hibernate:
#        format_sql: true
#    open-in-view: false
#  datasource:
#    url: jdbc:mysql://localhost:3306/test
#    username: root
#    password: root
#    driver-class-name: org.mariadb.jdbc.Driver
#  jackson:
#    default-property-inclusion: non_null
#  redis:
#    host: localhost
#    port: 6379
#logging:
#  level:
#    org.hibernate.type: debug
#    org.springframework.cloud: debug
#server:

---

spring:
  profiles: default
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    database: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/snack?serverTimezone=UTC&characterEncoding=UTF-8
    username: root
    password: Sweetime010!
    driver-class-name: com.mysql.cj.jdbc.Driver

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: orderSnack
          destination: test
          contentType: application/json
        event-out:
          destination: test
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

api:
  url:
    orderManagement: localhost:8082

server:
  port: 8081
---

spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: orderSnack
          destination: test
          contentType: application/json
        event-out:
          destination: test
          contentType: application/json

api:
  url:
    orderManagement: orderManagement:8080

#kafka:
#  bootstrap:
#    address: http://localhost:9092
#  topic: eventTopic
#  consumer:
#    groupId: eventTopic-order
#  event:
#      location: com.example.eventTopic.kafka.event
